---

- name: install required packages
  when: ansible_distribution == "CentOS"
  yum:
    name:
      - yum-utils
      - device-mapper-persistent-data
      - lvm2
  register: download_rpms
  until: download_rpms is success
  retries: 10
  delay: 2
  tags:
    - yum

- name: set up the repository
  when: ansible_distribution == "CentOS"
  yum_repository:
    name: 'Docker-CE-Stable'
    description: Docker Community Edition Repository
    state: present
    baseurl: 'https://download.docker.com/linux/centos/7/$basearch/stable'
    gpgcheck: true
    gpgkey: 'https://download.docker.com/linux/centos/gpg'
  notify: yum-clean-metadata
  tags:
    - yum

- name: ensure legacy rpms are absent
  when: docker_legacy|length > 1
  yum:
    name: "{{ docker_legacy }}"
    state: absent
  tags:
    - yum

- name: ensure sysctl settings are set for docker
  sysctl:
    name: "{{ item }}"
    value: 1
    state: present
    reload: true
    ignoreerrors: true
  with_items:
    - net.ipv4.ip_forward
    - bridge-nf-call-iptables
    - bridge-nf-call-ip6tables
  tags:
    - docker

- name: ensure the docker group is present
  group:
    name: docker
    state: present
    system: true
  tags:
    - docker

- name: install python-pip
  yum:
    name: python-pip
    state: present
  register: download_pip
  until: download_pip is success
  retries: 10
  delay: 2
  tags:
    - pip

- name: uninstall docker client for python
  become: true
  shell: 'pip uninstall -y docker-py || /bin/true'
  no_log: true
  ignore_errors: true
  changed_when: False
  tags:
    - skip_ansible_lint
    - uninstall

- name: install docker client for python
  pip:
    name: docker
    state: present
    version: "{{ pip_docker_version }}"
  register: pip_install
  until: pip_install is success
  retries: 10
  delay: 2
  changed_when: False  # workaround for bug in pip:
  tags:
    - python

- name: ensure docker compose is installed
  pip:
    name: docker-compose
    state: present
    version: "{{ pip_docker_compose_version }}"
  register: pip_install
  until: pip_install is success
  retries: 10
  delay: 2
  changed_when: False  # workaround for bug in pip:
  tags:
    - docker

- name: install docker engine
  become: true
  yum:
    name: "{{ docker_package_name }}-{{ docker_package_version }}"
    state: present
    update_cache: true
  register: yum_install
  until: yum_install is success
  retries: 10
  delay: 2
  tags:
    - yum

- name: enable docker
  systemd:
    name: docker
    enabled: true
    daemon_reload: true
  notify:
    - start docker
  tags:
    - yum

- name: create docker environment file
  when: docker_http_proxy is defined or docker_https_proxy is defined
  template:
    src: sysconfig/docker
    dest: /etc/sysconfig/docker
    owner: root
    group: docker
    mode: 0644
    force: true
  notify:
    - restart docker
  tags:
    - template

- name: remove previous docker proxy config, if any
  file:
    path: /etc/systemd/docker.service.d/http-proxy.conf
    state: absent
  when: docker_http_proxy is not defined and docker_https_proxy is not defined
  tags:
    - template

- name: create the systemd drop-in directory
  file:
    path: /etc/systemd/docker.service.d
    owner: root
    group: docker
    mode: 0755
    state: directory
  when: docker_http_proxy is defined or docker_https_proxy is defined
  tags:
    - template

- name: create the proxy config for the docker service
  when: docker_http_proxy is defined or docker_https_proxy is defined
  template:
    src: http-proxy.conf
    dest: /etc/systemd/docker.service.d/
    owner: root
    group: docker
    mode: 0644
  notify:
    - restart docker
  tags:
    - template

- name: create service in systemd
  template:
    src: "{{ docker_package_name }}.service"
    dest: /usr/lib/systemd/system/docker.service
    force: true
  register: unit
  notify:
    - restart docker
  tags:
    - template

- name: ensure /etc/docker exists
  file:
    path: /etc/docker
    state: directory

- name: install daemon options
  template:
    src: daemon.json
    dest: /etc/docker/daemon.json
  notify:
    - restart docker
  tags:
    - template

- meta: flush_handlers

- name: add any docker_users to docker group
  user:
    name: "{{ item }}"
    groups: docker
    append: true
  when: docker_users is defined
  with_items: "{{ docker_users }}"
  tags:
    - docker
