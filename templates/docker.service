[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
After=network-online.target firewalld.service
Wants=network-online.target

[Service]
EnvironmentFile=-/etc/sysconfig/docker
Type=notify
# the default is not to use systemd for cgroups because the delegate issues still
# exists and systemd currently does not support the cgroup feature set required
# for containers run by docker
ExecStart=/usr/bin/dockerd \
{% if docker_package_version == '1.13.1' %}--graph={% else %}--data-root={{ docker_graph_dir }}{% endif %} \
--exec-opt native.cgroupdriver=systemd \
--add-runtime docker-runc=/usr/libexec/docker/docker-runc-current \
--userland-proxy-path=/usr/libexec/docker/docker-proxy-current \
--default-runtime=docker-runc \
--selinux-enabled -s "{{ docker_engine.storagedriver }}" --insecure-registry "{{ docker_engine.insecure_registry }}" {% if repository_registry is defined %}--insecure-registry={{ repository_registry }}{% endif %}

ExecReload=/bin/kill -s HUP $MAINPID
# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity
# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
#TasksMax=infinity
TimeoutStartSec=0
# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes
# kill only the docker process, not all processes in the cgroup
KillMode=process
# restart the docker process if it exits prematurely
Restart=on-failure
StartLimitBurst=3
StartLimitInterval=60s

[Install]
WantedBy=multi-user.target
